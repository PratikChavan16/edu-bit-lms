name: Test Suite

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  workflow_dispatch:

jobs:
  unit-integration-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: bitflow-admin/package-lock.json

      - name: Install dependencies
        working-directory: ./bitflow-admin
        run: npm ci

      - name: Run TypeScript check
        working-directory: ./bitflow-admin
        run: npx tsc --noEmit

      - name: Run linter
        working-directory: ./bitflow-admin
        run: npm run lint

      - name: Run unit & integration tests
        working-directory: ./bitflow-admin
        run: npm test -- --run --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./bitflow-admin/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: bitflow-admin/coverage/

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: bitflow-admin/package-lock.json

      - name: Install dependencies
        working-directory: ./bitflow-admin
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./bitflow-admin
        run: npx playwright install --with-deps chromium

      - name: Start backend server
        working-directory: ./backend
        run: |
          php artisan migrate --force
          php artisan db:seed --class=TestDataSeeder
          php artisan serve &
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"

      - name: Run E2E tests
        working-directory: ./bitflow-admin
        run: npm run test:e2e -- --project=chromium

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: bitflow-admin/playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: bitflow-admin/test-results/

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-integration-tests, e2e-tests]
    if: always()
    
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: test-results
          path: test-results/

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            
            const comment = `## Test Results
            
            ### Coverage
            - **Lines**: ${total.lines.pct}%
            - **Statements**: ${total.statements.pct}%
            - **Functions**: ${total.functions.pct}%
            - **Branches**: ${total.branches.pct}%
            
            ${total.lines.pct >= 70 ? '✅' : '❌'} Coverage ${total.lines.pct >= 70 ? 'meets' : 'below'} threshold (70%)
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

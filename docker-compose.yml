# Bitflow Local Development Environment
# This docker-compose file sets up the complete development environment
# including API, database, Redis, PgAdmin, and Prisma Studio

version: '3.9'

services:
  # PostgreSQL Database (Master + Tenant schemas)
  postgres:
    image: postgres:16-alpine
    container_name: bitflow-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: bitflow
      POSTGRES_PASSWORD: bitflow_dev_password
      POSTGRES_DB: bitflow_master
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bitflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bitflow-network

  # Redis for sessions, caching, and job queues
  redis:
    image: redis:7-alpine
    container_name: bitflow-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass bitflow_redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - bitflow-network

  # PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bitflow-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bitflow.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - bitflow-network
    depends_on:
      - postgres

  # Main API Service
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
      target: development
    container_name: bitflow-api
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugger port
    environment:
      NODE_ENV: development
      PORT: 3000
      
      # Database
      DATABASE_URL: postgresql://bitflow:bitflow_dev_password@postgres:5432/bitflow_master
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: bitflow_redis_password
      
      # JWT Secrets (DEV ONLY - use Secrets Manager in production)
      JWT_SECRET: dev_jwt_secret_change_in_production
      JWT_REFRESH_SECRET: dev_jwt_refresh_secret_change_in_production
      
      # CORS
      CORS_ORIGINS: http://localhost:3001,http://localhost:19006
      
      # Logging
      LOG_LEVEL: debug
      
      # Sentry (optional in dev)
      # SENTRY_DSN: your_sentry_dsn
      
    volumes:
      - ./services/api/src:/app/src
      - ./packages:/app/packages
      - /app/node_modules
    networks:
      - bitflow-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # Auth Microservice
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
      target: development
    container_name: bitflow-auth
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://bitflow:bitflow_dev_password@postgres:5432/bitflow_master
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: bitflow_redis_password
      JWT_SECRET: dev_jwt_secret_change_in_production
      JWT_REFRESH_SECRET: dev_jwt_refresh_secret_change_in_production
    volumes:
      - ./services/auth/src:/app/src
      - /app/node_modules
    networks:
      - bitflow-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # Background Workers
  workers:
    build:
      context: ./services/workers
      dockerfile: Dockerfile
      target: development
    container_name: bitflow-workers
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://bitflow:bitflow_dev_password@postgres:5432/bitflow_master
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: bitflow_redis_password
      
      # Email configuration (dev - use mailtrap or similar)
      SMTP_HOST: smtp.mailtrap.io
      SMTP_PORT: 2525
      SMTP_USER: your_mailtrap_user
      SMTP_PASS: your_mailtrap_pass
      
      # AWS credentials (for S3 file upload in dev)
      # AWS_ACCESS_KEY_ID: your_access_key
      # AWS_SECRET_ACCESS_KEY: your_secret_key
      # AWS_REGION: us-east-1
      
    volumes:
      - ./services/workers/src:/app/src
      - /app/node_modules
    networks:
      - bitflow-network
    depends_on:
      - redis
      - postgres
    command: npm run dev

  # Next.js Web Application
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      target: development
    container_name: bitflow-web
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000/api/v1
      NEXT_PUBLIC_WS_URL: ws://localhost:3000
      # NEXT_PUBLIC_SENTRY_DSN: your_sentry_dsn
    volumes:
      - ./apps/web:/app
      - ./packages:/packages
      - /app/node_modules
      - /app/.next
    networks:
      - bitflow-network
    depends_on:
      - api
    command: npm run dev

  # Prisma Studio for database visualization
  prisma-studio:
    image: node:20-alpine
    container_name: bitflow-prisma-studio
    working_dir: /app
    ports:
      - "5555:5555"
    environment:
      DATABASE_URL: postgresql://bitflow:bitflow_dev_password@postgres:5432/bitflow_master
    volumes:
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./node_modules:/app/node_modules
    networks:
      - bitflow-network
    depends_on:
      - postgres
    command: sh -c "npx prisma studio --port 5555 --browser none"

  # Mailhog for email testing (optional)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: bitflow-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - bitflow-network

networks:
  bitflow-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

# Usage:
# 1. Start all services: docker-compose up -d
# 2. View logs: docker-compose logs -f
# 3. Stop all services: docker-compose down
# 4. Remove volumes: docker-compose down -v
#
# Access points:
# - API: http://localhost:3000
# - Auth Service: http://localhost:3001
# - Web App: http://localhost:3002
# - PgAdmin: http://localhost:5050
# - Prisma Studio: http://localhost:5555
# - Mailhog UI: http://localhost:8025
#
# To run migrations: docker-compose exec api npm run prisma:migrate
# To seed database: docker-compose exec api npm run prisma:seed

{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/packages/ui/src/components/Input.tsx"],"sourcesContent":["\"use client\";\r\n\r\n/**\r\n * Input Component\r\n * \r\n * Based on the glassmorphic design with rounded, frosted inputs\r\n * Supports various types and states\r\n */\r\n\r\nimport { InputHTMLAttributes, forwardRef, useState } from 'react';\r\nimport { cn } from '../lib/utils';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string;\r\n  error?: string;\r\n  helperText?: string;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  variant?: 'default' | 'glass';\r\n}\r\n\r\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\r\n  (\r\n    {\r\n      label,\r\n      error,\r\n      helperText,\r\n      leftIcon,\r\n      rightIcon,\r\n      variant = 'default',\r\n      className,\r\n      type = 'text',\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const isPassword = type === 'password';\r\n    const inputType = isPassword && showPassword ? 'text' : type;\r\n\r\n    return (\r\n      <div className=\"w-full\">\r\n        {label && (\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            {label}\r\n            {props.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n          </label>\r\n        )}\r\n        <div className=\"relative\">\r\n          {leftIcon && (\r\n            <div className=\"absolute left-4 top-1/2 -translate-y-1/2 text-gray-400\">\r\n              {leftIcon}\r\n            </div>\r\n          )}\r\n          <input\r\n            ref={ref}\r\n            type={inputType}\r\n            className={cn(\r\n              'w-full px-6 py-3 rounded-full transition-all duration-300',\r\n              'focus:outline-none focus:ring-2 focus:ring-white/30',\r\n              'placeholder:text-gray-400',\r\n              {\r\n                // Glass variant (matches design)\r\n                'bg-white/90 backdrop-blur-sm text-gray-700': variant === 'glass',\r\n                'hover:bg-white/95': variant === 'glass',\r\n\r\n                // Default variant\r\n                'bg-white border border-gray-300 text-gray-900': variant === 'default',\r\n                'hover:border-gray-400': variant === 'default',\r\n\r\n                // Error state\r\n                'border-red-500 focus:ring-red-500': error,\r\n\r\n                // Icon padding\r\n                'pl-12': leftIcon,\r\n                'pr-12': rightIcon || isPassword,\r\n              },\r\n              className\r\n            )}\r\n            {...props}\r\n          />\r\n          {isPassword && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              className=\"absolute right-4 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n            >\r\n              {showPassword ? (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                  <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\r\n                </svg>\r\n              )}\r\n            </button>\r\n          )}\r\n          {rightIcon && !isPassword && (\r\n            <div className=\"absolute right-4 top-1/2 -translate-y-1/2 text-gray-400\">\r\n              {rightIcon}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {error && <p className=\"mt-1 text-sm text-red-400\">{error}</p>}\r\n        {helperText && !error && (\r\n          <p className=\"mt-1 text-sm text-gray-400\">{helperText}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = 'Input';\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;CAKC,GAED;AACA;;;AAVA;;;AAqBO,MAAM,sBAAQ,GAAA,IAAA,maAAU,UAC7B,CACE,EACE,KAAK,EACL,KAAK,EACL,UAAU,EACV,QAAQ,EACR,SAAS,EACT,UAAU,SAAS,EACnB,SAAS,EACT,OAAO,MAAM,EACb,GAAG,OACJ,EACD;;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iaAAQ,EAAC;IACjD,MAAM,aAAa,SAAS;IAC5B,MAAM,YAAY,cAAc,eAAe,SAAS;IAExD,qBACE,qbAAC;QAAI,WAAU;;YACZ,uBACC,qbAAC;gBAAM,WAAU;;oBACd;oBACA,MAAM,QAAQ,kBAAI,qbAAC;wBAAK,WAAU;kCAAoB;;;;;;;;;;;;0BAG3D,qbAAC;gBAAI,WAAU;;oBACZ,0BACC,qbAAC;wBAAI,WAAU;kCACZ;;;;;;kCAGL,qbAAC;wBACC,KAAK;wBACL,MAAM;wBACN,WAAW,IAAA,0LAAE,EACX,6DACA,uDACA,6BACA;4BACE,iCAAiC;4BACjC,8CAA8C,YAAY;4BAC1D,qBAAqB,YAAY;4BAEjC,kBAAkB;4BAClB,iDAAiD,YAAY;4BAC7D,yBAAyB,YAAY;4BAErC,cAAc;4BACd,qCAAqC;4BAErC,eAAe;4BACf,SAAS;4BACT,SAAS,aAAa;wBACxB,GACA;wBAED,GAAG,KAAK;;;;;;oBAEV,4BACC,qbAAC;wBACC,MAAK;wBACL,SAAS,IAAM,gBAAgB,CAAC;wBAChC,WAAU;kCAET,6BACC,qbAAC;4BACC,OAAM;4BACN,WAAU;4BACV,SAAQ;4BACR,MAAK;;8CAEL,qbAAC;oCAAK,GAAE;;;;;;8CACR,qbAAC;oCACC,UAAS;oCACT,GAAE;oCACF,UAAS;;;;;;;;;;;qFAIb,qbAAC;4BACC,OAAM;4BACN,WAAU;4BACV,SAAQ;4BACR,MAAK;;8CAEL,qbAAC;oCACC,UAAS;oCACT,GAAE;oCACF,UAAS;;;;;;8CAEX,qbAAC;oCAAK,GAAE;;;;;;;;;;;;;;;;;oBAKf,aAAa,CAAC,4BACb,qbAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAIN,uBAAS,qbAAC;gBAAE,WAAU;0BAA6B;;;;;;YACnD,cAAc,CAAC,uBACd,qbAAC;gBAAE,WAAU;0BAA8B;;;;;;;;;;;;AAInD;;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/packages/ui/src/components/table.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../lib/cn\";\r\n\r\nconst Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table ref={ref} className={cn(\"w-full caption-bottom text-sm\", className)} {...props} />\r\n  </div>\r\n));\r\nTable.displayName = \"Table\";\r\n\r\nconst TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"text-xs uppercase\", className)} {...props} />\r\n));\r\nTableHeader.displayName = \"TableHeader\";\r\n\r\nconst TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(({ className, ...props }, ref) => (\r\n  <tbody ref={ref} className={cn(\"[&_tr:last-child]:border-0\", className)} {...props} />\r\n));\r\nTableBody.displayName = \"TableBody\";\r\n\r\nconst TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(({ className, ...props }, ref) => (\r\n  <tr ref={ref} className={cn(\"border-b border-border transition-colors\", className)} {...props} />\r\n));\r\nTableRow.displayName = \"TableRow\";\r\n\r\ninterface TableHeadProps extends React.ThHTMLAttributes<HTMLTableCellElement> {\r\n  className?: string;\r\n}\r\n\r\nconst TableHead = React.forwardRef<HTMLTableCellElement, TableHeadProps>(({ className, ...props }, ref) => (\r\n  <th ref={ref} className={cn(\"py-3 text-left font-semibold\", className)} {...props} />\r\n));\r\nTableHead.displayName = \"TableHead\";\r\n\r\ninterface TableCellProps extends React.TdHTMLAttributes<HTMLTableCellElement> {\r\n  className?: string;\r\n}\r\n\r\nconst TableCell = React.forwardRef<HTMLTableCellElement, TableCellProps>(({ className, ...props }, ref) => (\r\n  <td ref={ref} className={cn(\"py-3 align-middle\", className)} {...props} />\r\n));\r\nTableCell.displayName = \"TableCell\";\r\n\r\nconst TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(({ className, ...props }, ref) => (\r\n  <caption ref={ref} className={cn(\"mt-4 text-sm text-muted-foreground\", className)} {...props} />\r\n));\r\nTableCaption.displayName = \"TableCaption\";\r\n\r\nexport { Table, TableHeader, TableBody, TableRow, TableHead, TableCell, TableCaption };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,maAAgB,MAA2D,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjH,qbAAC;QAAI,WAAU;kBACb,cAAA,qbAAC;YAAM,KAAK;YAAK,WAAW,IAAA,uLAAE,EAAC,iCAAiC;YAAa,GAAG,KAAK;;;;;;;;;;;;AAGzF,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,maAAgB,OAAyE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACrI,qbAAC;QAAM,KAAK;QAAK,WAAW,IAAA,uLAAE,EAAC,qBAAqB;QAAa,GAAG,KAAK;;;;;;;AAE3E,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,maAAgB,OAAyE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACnI,qbAAC;QAAM,KAAK;QAAK,WAAW,IAAA,uLAAE,EAAC,8BAA8B;QAAa,GAAG,KAAK;;;;;;;AAEpF,UAAU,WAAW,GAAG;AAExB,MAAM,yBAAW,maAAgB,OAAiE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1H,qbAAC;QAAG,KAAK;QAAK,WAAW,IAAA,uLAAE,EAAC,4CAA4C;QAAa,GAAG,KAAK;;;;;;;AAE/F,SAAS,WAAW,GAAG;AAMvB,MAAM,0BAAY,maAAgB,OAAuC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjG,qbAAC;QAAG,KAAK;QAAK,WAAW,IAAA,uLAAE,EAAC,gCAAgC;QAAa,GAAG,KAAK;;;;;;;AAEnF,UAAU,WAAW,GAAG;AAMxB,MAAM,0BAAY,maAAgB,QAAuC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjG,qbAAC;QAAG,KAAK;QAAK,WAAW,IAAA,uLAAE,EAAC,qBAAqB;QAAa,GAAG,KAAK;;;;;;;AAExE,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,maAAgB,QAAyE,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtI,qbAAC;QAAQ,KAAK;QAAK,WAAW,IAAA,uLAAE,EAAC,sCAAsC;QAAa,GAAG,KAAK;;;;;;;AAE9F,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/packages/ui/src/components/select.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../lib/utils\";\r\n\r\n// Note: These are simple HTML select wrappers\r\n// For more complex dropdowns, consider using a library like Radix UI\r\n\r\nexport interface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {}\r\n\r\nconst Select = React.forwardRef<HTMLSelectElement, SelectProps>(\r\n  ({ className, children, ...props }, ref) => {\r\n    return (\r\n      <select\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-white px-3 py-2 text-sm text-black ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </select>\r\n    );\r\n  }\r\n);\r\nSelect.displayName = \"Select\";\r\n\r\n// These are placeholder exports for compatibility\r\n// They're not used with native HTML select, but exported to avoid import errors\r\nexport const SelectTrigger = Select;\r\nexport const SelectContent = ({ children }: { children: React.ReactNode }) => <>{children}</>;\r\nexport const SelectItem = ({ value, children, className }: { value: string; children: React.ReactNode; className?: string }) => (\r\n  <option value={value} className={className}>{children}</option>\r\n);\r\nexport const SelectValue = ({ placeholder }: { placeholder?: string }) => (\r\n  <option value=\"\" disabled>{placeholder}</option>\r\n);\r\n\r\nexport { Select };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA;;;;AAOA,MAAM,uBAAS,maAAgB,MAC7B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAClC,qBACE,qbAAC;QACC,WAAW,IAAA,0LAAE,EACX,oQACA;QAEF,KAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,OAAO,WAAW,GAAG;AAId,MAAM,gBAAgB;AACtB,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAiC,iBAAK;kBAAG;;MAApE;AACN,MAAM,aAAa,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAoE,iBACzH,qbAAC;QAAO,OAAO;QAAO,WAAW;kBAAY;;;;;;MADlC;AAGN,MAAM,cAAc,CAAC,EAAE,WAAW,EAA4B,iBACnE,qbAAC;QAAO,OAAM;QAAG,QAAQ;kBAAE;;;;;;MADhB","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/apps/admin/app/batches/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Plus, Search, Edit, Trash2 } from \"lucide-react\";\r\nimport { Button } from \"@bitflow/ui\";\r\nimport { Input } from \"@bitflow/ui\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@bitflow/ui\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@bitflow/ui\";\r\nimport { Badge } from \"@bitflow/ui\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Link from \"next/link\";\r\n\r\n// Mock data\r\nconst mockBatches = [\r\n  {\r\n    id: \"1\",\r\n    batchYear: \"2021-2025\",\r\n    batchName: \"Batch 2021\",\r\n    courseId: \"1\",\r\n    courseName: \"Computer Science\",\r\n    startDate: \"2021-08-01\",\r\n    endDate: \"2025-06-30\",\r\n    currentSemester: 7,\r\n    totalStudents: 120,\r\n    enrollmentCapacity: 150,\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    batchYear: \"2022-2026\",\r\n    batchName: \"Batch 2022\",\r\n    courseId: \"1\",\r\n    courseName: \"Computer Science\",\r\n    startDate: \"2022-08-01\",\r\n    endDate: \"2026-06-30\",\r\n    currentSemester: 5,\r\n    totalStudents: 135,\r\n    enrollmentCapacity: 150,\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    batchYear: \"2023-2027\",\r\n    batchName: \"Batch 2023\",\r\n    courseId: \"2\",\r\n    courseName: \"Mechanical Engineering\",\r\n    startDate: \"2023-08-01\",\r\n    endDate: \"2027-06-30\",\r\n    currentSemester: 3,\r\n    totalStudents: 98,\r\n    enrollmentCapacity: 120,\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    batchYear: \"2024-2028\",\r\n    batchName: \"Batch 2024\",\r\n    courseId: \"1\",\r\n    courseName: \"Computer Science\",\r\n    startDate: \"2024-08-01\",\r\n    endDate: \"2028-06-30\",\r\n    currentSemester: 1,\r\n    totalStudents: 145,\r\n    enrollmentCapacity: 150,\r\n    status: \"active\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    batchYear: \"2020-2024\",\r\n    batchName: \"Batch 2020\",\r\n    courseId: \"3\",\r\n    courseName: \"Business Administration\",\r\n    startDate: \"2020-08-01\",\r\n    endDate: \"2024-06-30\",\r\n    currentSemester: 8,\r\n    totalStudents: 85,\r\n    enrollmentCapacity: 100,\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: \"6\",\r\n    batchYear: \"2025-2029\",\r\n    batchName: \"Batch 2025\",\r\n    courseId: \"2\",\r\n    courseName: \"Mechanical Engineering\",\r\n    startDate: \"2025-08-01\",\r\n    endDate: \"2029-06-30\",\r\n    currentSemester: 0,\r\n    totalStudents: 0,\r\n    enrollmentCapacity: 120,\r\n    status: \"upcoming\",\r\n  },\r\n];\r\n\r\nconst mockCourses = [\r\n  { id: \"1\", name: \"Computer Science\" },\r\n  { id: \"2\", name: \"Mechanical Engineering\" },\r\n  { id: \"3\", name: \"Business Administration\" },\r\n];\r\n\r\nexport default function BatchesPage() {\r\n  const router = useRouter();\r\n  const queryClient = useQueryClient();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [courseFilter, setCourseFilter] = useState(\"all\");\r\n  const [statusFilter, setStatusFilter] = useState(\"all\");\r\n\r\n  // Fetch batches\r\n  const { data: batches = [], isLoading } = useQuery({\r\n    queryKey: [\"batches\"],\r\n    queryFn: async () => {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      return mockBatches;\r\n    },\r\n  });\r\n\r\n  // Delete mutation\r\n  const deleteMutation = useMutation({\r\n    mutationFn: async (id: string) => {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      return id;\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"batches\"] });\r\n    },\r\n  });\r\n\r\n  // Filter batches\r\n  const filteredBatches = batches.filter((batch) => {\r\n    const matchesSearch =\r\n      batch.batchName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      batch.batchYear.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      batch.courseName.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCourse =\r\n      courseFilter === \"all\" || batch.courseId === courseFilter;\r\n    const matchesStatus =\r\n      statusFilter === \"all\" || batch.status === statusFilter;\r\n    return matchesSearch && matchesCourse && matchesStatus;\r\n  });\r\n\r\n  const handleDelete = (id: string) => {\r\n    if (confirm(\"Are you sure you want to delete this batch?\")) {\r\n      deleteMutation.mutate(id);\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const variants = {\r\n      active: \"default\",\r\n      completed: \"secondary\",\r\n      upcoming: \"outline\",\r\n    };\r\n    return (\r\n      <Badge variant={variants[status as keyof typeof variants] || \"outline\"}>\r\n        {status.charAt(0).toUpperCase() + status.slice(1)}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getEnrollmentStatus = (total: number, capacity: number) => {\r\n    const percentage = (total / capacity) * 100;\r\n    if (percentage >= 90) return <Badge variant=\"destructive\">{percentage.toFixed(0)}%</Badge>;\r\n    if (percentage >= 70) return <Badge variant=\"default\">{percentage.toFixed(0)}%</Badge>;\r\n    return <Badge variant=\"secondary\">{percentage.toFixed(0)}%</Badge>;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"text-lg\">Loading batches...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Batches</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Manage academic batches and enrollment\r\n          </p>\r\n        </div>\r\n        <Link href=\"/batches/create\">\r\n          <Button>\r\n            <Plus className=\"mr-2 h-4 w-4\" />\r\n            Add Batch\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"flex gap-4 flex-wrap\">\r\n        <div className=\"flex-1 min-w-[200px]\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\r\n            <Input\r\n              placeholder=\"Search by batch name, year, or course...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-9\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <Select value={courseFilter} onValueChange={setCourseFilter}>\r\n          <SelectTrigger className=\"w-[200px] bg-white text-black\">\r\n            <SelectValue placeholder=\"All Courses\" />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"bg-white\">\r\n            <SelectItem value=\"all\" className=\"text-black\">All Courses</SelectItem>\r\n            {mockCourses.map((course) => (\r\n              <SelectItem key={course.id} value={course.id} className=\"text-black\">\r\n                {course.name}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n        <Select value={statusFilter} onValueChange={setStatusFilter}>\r\n          <SelectTrigger className=\"w-[200px] bg-white text-black\">\r\n            <SelectValue placeholder=\"All Status\" />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"bg-white\">\r\n            <SelectItem value=\"all\" className=\"text-black\">All Status</SelectItem>\r\n            <SelectItem value=\"active\" className=\"text-black\">Active</SelectItem>\r\n            <SelectItem value=\"completed\" className=\"text-black\">Completed</SelectItem>\r\n            <SelectItem value=\"upcoming\" className=\"text-black\">Upcoming</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"grid gap-4 md:grid-cols-4\">\r\n        <div className=\"rounded-lg border bg-card p-4\">\r\n          <div className=\"text-sm font-medium text-muted-foreground\">\r\n            Total Batches\r\n          </div>\r\n          <div className=\"text-2xl font-bold\">{batches.length}</div>\r\n        </div>\r\n        <div className=\"rounded-lg border bg-card p-4\">\r\n          <div className=\"text-sm font-medium text-muted-foreground\">\r\n            Active Batches\r\n          </div>\r\n          <div className=\"text-2xl font-bold\">\r\n            {batches.filter((b) => b.status === \"active\").length}\r\n          </div>\r\n        </div>\r\n        <div className=\"rounded-lg border bg-card p-4\">\r\n          <div className=\"text-sm font-medium text-muted-foreground\">\r\n            Total Students\r\n          </div>\r\n          <div className=\"text-2xl font-bold\">\r\n            {batches.reduce((sum, b) => sum + b.totalStudents, 0)}\r\n          </div>\r\n        </div>\r\n        <div className=\"rounded-lg border bg-card p-4\">\r\n          <div className=\"text-sm font-medium text-muted-foreground\">\r\n            Avg Enrollment\r\n          </div>\r\n          <div className=\"text-2xl font-bold\">\r\n            {batches.length > 0\r\n              ? ((batches.reduce((sum, b) => sum + (b.totalStudents / b.enrollmentCapacity) * 100, 0) / batches.length)).toFixed(0)\r\n              : 0}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <div className=\"rounded-md border\">\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead>Batch Year</TableHead>\r\n              <TableHead>Batch Name</TableHead>\r\n              <TableHead>Course</TableHead>\r\n              <TableHead>Start Date</TableHead>\r\n              <TableHead>End Date</TableHead>\r\n              <TableHead>Current Semester</TableHead>\r\n              <TableHead>Students</TableHead>\r\n              <TableHead>Enrollment</TableHead>\r\n              <TableHead>Status</TableHead>\r\n              <TableHead>Actions</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {filteredBatches.length === 0 ? (\r\n              <TableRow>\r\n                <TableCell colSpan={10} className=\"text-center\">\r\n                  No batches found\r\n                </TableCell>\r\n              </TableRow>\r\n            ) : (\r\n              filteredBatches.map((batch) => (\r\n                <TableRow key={batch.id}>\r\n                  <TableCell className=\"font-medium\">{batch.batchYear}</TableCell>\r\n                  <TableCell>{batch.batchName}</TableCell>\r\n                  <TableCell>{batch.courseName}</TableCell>\r\n                  <TableCell>{new Date(batch.startDate).toLocaleDateString()}</TableCell>\r\n                  <TableCell>{new Date(batch.endDate).toLocaleDateString()}</TableCell>\r\n                  <TableCell>{batch.currentSemester || \"Not Started\"}</TableCell>\r\n                  <TableCell>\r\n                    {batch.totalStudents} / {batch.enrollmentCapacity}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {getEnrollmentStatus(batch.totalStudents, batch.enrollmentCapacity)}\r\n                  </TableCell>\r\n                  <TableCell>{getStatusBadge(batch.status)}</TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex gap-2\">\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => router.push(`/batches/${batch.id}/edit`)}\r\n                      >\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleDelete(batch.id)}\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}
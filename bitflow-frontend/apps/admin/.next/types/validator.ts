// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/(auth)/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/(auth)/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics">> = Specific
  const handler = {} as typeof import("../../app/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/assessments/[id]/grade/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/assessments/[id]/grade">> = Specific
  const handler = {} as typeof import("../../app/assessments/[id]/grade/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/assessments/create/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/assessments/create">> = Specific
  const handler = {} as typeof import("../../app/assessments/create/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/audit-log/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/audit-log">> = Specific
  const handler = {} as typeof import("../../app/audit-log/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/backups/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/backups">> = Specific
  const handler = {} as typeof import("../../app/backups/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/billing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/billing">> = Specific
  const handler = {} as typeof import("../../app/billing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/change-requests/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/change-requests">> = Specific
  const handler = {} as typeof import("../../app/change-requests/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/components-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/components-demo">> = Specific
  const handler = {} as typeof import("../../app/components-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/feature-toggles/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/feature-toggles">> = Specific
  const handler = {} as typeof import("../../app/feature-toggles/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/invoices/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/invoices">> = Specific
  const handler = {} as typeof import("../../app/invoices/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/students/bulk-upload/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/students/bulk-upload">> = Specific
  const handler = {} as typeof import("../../app/students/bulk-upload/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/timetable/builder/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/timetable/builder">> = Specific
  const handler = {} as typeof import("../../app/timetable/builder/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/ui-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ui-demo">> = Specific
  const handler = {} as typeof import("../../app/ui-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/universities/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/universities">> = Specific
  const handler = {} as typeof import("../../app/universities/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../app/(auth)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/(auth)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

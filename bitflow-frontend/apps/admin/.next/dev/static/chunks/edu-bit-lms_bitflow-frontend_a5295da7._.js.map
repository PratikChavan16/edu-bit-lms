{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/packages/ui/src/components/Input.tsx"],"sourcesContent":["\"use client\";\r\n\r\n/**\r\n * Input Component\r\n * \r\n * Based on the glassmorphic design with rounded, frosted inputs\r\n * Supports various types and states\r\n */\r\n\r\nimport { InputHTMLAttributes, forwardRef, useState } from 'react';\r\nimport { cn } from '../lib/utils';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label?: string;\r\n  error?: string;\r\n  helperText?: string;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  variant?: 'default' | 'glass';\r\n}\r\n\r\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\r\n  (\r\n    {\r\n      label,\r\n      error,\r\n      helperText,\r\n      leftIcon,\r\n      rightIcon,\r\n      variant = 'default',\r\n      className,\r\n      type = 'text',\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const isPassword = type === 'password';\r\n    const inputType = isPassword && showPassword ? 'text' : type;\r\n\r\n    return (\r\n      <div className=\"w-full\">\r\n        {label && (\r\n          <label className=\"block text-sm font-medium mb-2\">\r\n            {label}\r\n            {props.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n          </label>\r\n        )}\r\n        <div className=\"relative\">\r\n          {leftIcon && (\r\n            <div className=\"absolute left-4 top-1/2 -translate-y-1/2 text-gray-400\">\r\n              {leftIcon}\r\n            </div>\r\n          )}\r\n          <input\r\n            ref={ref}\r\n            type={inputType}\r\n            className={cn(\r\n              'w-full px-6 py-3 rounded-full transition-all duration-300',\r\n              'focus:outline-none focus:ring-2 focus:ring-white/30',\r\n              'placeholder:text-gray-400',\r\n              {\r\n                // Glass variant (matches design)\r\n                'bg-white/90 backdrop-blur-sm text-gray-700': variant === 'glass',\r\n                'hover:bg-white/95': variant === 'glass',\r\n\r\n                // Default variant\r\n                'bg-white border border-gray-300 text-gray-900': variant === 'default',\r\n                'hover:border-gray-400': variant === 'default',\r\n\r\n                // Error state\r\n                'border-red-500 focus:ring-red-500': error,\r\n\r\n                // Icon padding\r\n                'pl-12': leftIcon,\r\n                'pr-12': rightIcon || isPassword,\r\n              },\r\n              className\r\n            )}\r\n            {...props}\r\n          />\r\n          {isPassword && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              className=\"absolute right-4 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\r\n            >\r\n              {showPassword ? (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"h-5 w-5\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                  <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\r\n                </svg>\r\n              )}\r\n            </button>\r\n          )}\r\n          {rightIcon && !isPassword && (\r\n            <div className=\"absolute right-4 top-1/2 -translate-y-1/2 text-gray-400\">\r\n              {rightIcon}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {error && <p className=\"mt-1 text-sm text-red-400\">{error}</p>}\r\n        {helperText && !error && (\r\n          <p className=\"mt-1 text-sm text-gray-400\">{helperText}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = 'Input';\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;CAKC,GAED;AACA;;;AAVA;;;AAqBO,MAAM,sBAAQ,GAAA,IAAA,maAAU,UAC7B,CACE,EACE,KAAK,EACL,KAAK,EACL,UAAU,EACV,QAAQ,EACR,SAAS,EACT,UAAU,SAAS,EACnB,SAAS,EACT,OAAO,MAAM,EACb,GAAG,OACJ,EACD;;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iaAAQ,EAAC;IACjD,MAAM,aAAa,SAAS;IAC5B,MAAM,YAAY,cAAc,eAAe,SAAS;IAExD,qBACE,qbAAC;QAAI,WAAU;;YACZ,uBACC,qbAAC;gBAAM,WAAU;;oBACd;oBACA,MAAM,QAAQ,kBAAI,qbAAC;wBAAK,WAAU;kCAAoB;;;;;;;;;;;;0BAG3D,qbAAC;gBAAI,WAAU;;oBACZ,0BACC,qbAAC;wBAAI,WAAU;kCACZ;;;;;;kCAGL,qbAAC;wBACC,KAAK;wBACL,MAAM;wBACN,WAAW,IAAA,0LAAE,EACX,6DACA,uDACA,6BACA;4BACE,iCAAiC;4BACjC,8CAA8C,YAAY;4BAC1D,qBAAqB,YAAY;4BAEjC,kBAAkB;4BAClB,iDAAiD,YAAY;4BAC7D,yBAAyB,YAAY;4BAErC,cAAc;4BACd,qCAAqC;4BAErC,eAAe;4BACf,SAAS;4BACT,SAAS,aAAa;wBACxB,GACA;wBAED,GAAG,KAAK;;;;;;oBAEV,4BACC,qbAAC;wBACC,MAAK;wBACL,SAAS,IAAM,gBAAgB,CAAC;wBAChC,WAAU;kCAET,6BACC,qbAAC;4BACC,OAAM;4BACN,WAAU;4BACV,SAAQ;4BACR,MAAK;;8CAEL,qbAAC;oCAAK,GAAE;;;;;;8CACR,qbAAC;oCACC,UAAS;oCACT,GAAE;oCACF,UAAS;;;;;;;;;;;qFAIb,qbAAC;4BACC,OAAM;4BACN,WAAU;4BACV,SAAQ;4BACR,MAAK;;8CAEL,qbAAC;oCACC,UAAS;oCACT,GAAE;oCACF,UAAS;;;;;;8CAEX,qbAAC;oCAAK,GAAE;;;;;;;;;;;;;;;;;oBAKf,aAAa,CAAC,4BACb,qbAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAIN,uBAAS,qbAAC;gBAAE,WAAU;0BAA6B;;;;;;YACnD,cAAc,CAAC,uBACd,qbAAC;gBAAE,WAAU;0BAA8B;;;;;;;;;;;;AAInD;;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/packages/ui/src/components/label.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../lib/utils\";\r\n\r\nexport interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <label\r\n      ref={ref}\r\n      className={cn(\r\n        \"text-sm font-medium leading-none text-gray-900 peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nLabel.displayName = \"Label\";\r\n\r\nexport { Label };\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAIA,MAAM,sBAAQ,maAAgB,MAC5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,qbAAC;QACC,KAAK;QACL,WAAW,IAAA,0LAAE,EACX,4GACA;QAED,GAAG,KAAK;;;;;;;AAIf,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/packages/ui/src/components/select.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../lib/utils\";\r\n\r\n// Note: These are simple HTML select wrappers\r\n// For more complex dropdowns, consider using a library like Radix UI\r\n\r\nexport interface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {}\r\n\r\nconst Select = React.forwardRef<HTMLSelectElement, SelectProps>(\r\n  ({ className, children, ...props }, ref) => {\r\n    return (\r\n      <select\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-white px-3 py-2 text-sm text-black ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </select>\r\n    );\r\n  }\r\n);\r\nSelect.displayName = \"Select\";\r\n\r\n// These are placeholder exports for compatibility\r\n// They're not used with native HTML select, but exported to avoid import errors\r\nexport const SelectTrigger = Select;\r\nexport const SelectContent = ({ children }: { children: React.ReactNode }) => <>{children}</>;\r\nexport const SelectItem = ({ value, children, className }: { value: string; children: React.ReactNode; className?: string }) => (\r\n  <option value={value} className={className}>{children}</option>\r\n);\r\nexport const SelectValue = ({ placeholder }: { placeholder?: string }) => (\r\n  <option value=\"\" disabled>{placeholder}</option>\r\n);\r\n\r\nexport { Select };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA;;;;AAOA,MAAM,uBAAS,maAAgB,MAC7B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAClC,qBACE,qbAAC;QACC,WAAW,IAAA,0LAAE,EACX,oQACA;QAEF,KAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,OAAO,WAAW,GAAG;AAId,MAAM,gBAAgB;AACtB,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAiC,iBAAK;kBAAG;;MAApE;AACN,MAAM,aAAa,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAoE,iBACzH,qbAAC;QAAO,OAAO;QAAO,WAAW;kBAAY;;;;;;MADlC;AAGN,MAAM,cAAc,CAAC,EAAE,WAAW,EAA4B,iBACnE,qbAAC;QAAO,OAAM;QAAG,QAAQ;kBAAE;;;;;;MADhB","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/packages/ui/src/components/textarea.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../lib/utils\";\r\n\r\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-white px-3 py-2 text-sm text-black ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = \"Textarea\";\r\n\r\nexport { Textarea };\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAIA,MAAM,yBAAW,maAAgB,MAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,qbAAC;QACC,WAAW,IAAA,0LAAE,EACX,8SACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///D:/bitflow_lms/edu-bit-lms/bitflow-frontend/apps/admin/app/batches/create/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Button } from \"@bitflow/ui\";\r\nimport { Input } from \"@bitflow/ui\";\r\nimport { Label } from \"@bitflow/ui\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@bitflow/ui\";\r\nimport { Textarea } from \"@bitflow/ui\";\r\nimport { ArrowLeft } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\n\r\n// Mock data\r\nconst mockCourses = [\r\n  { id: \"1\", name: \"Computer Science\" },\r\n  { id: \"2\", name: \"Mechanical Engineering\" },\r\n  { id: \"3\", name: \"Business Administration\" },\r\n];\r\n\r\n// Validation schema\r\nconst batchSchema = z.object({\r\n  batchYear: z\r\n    .string()\r\n    .min(1, \"Batch year is required\")\r\n    .regex(/^\\d{4}-\\d{4}$/, \"Format: YYYY-YYYY (e.g., 2021-2025)\"),\r\n  batchName: z\r\n    .string()\r\n    .min(3, \"Batch name must be at least 3 characters\")\r\n    .max(50, \"Batch name must not exceed 50 characters\"),\r\n  courseId: z.string().min(1, \"Course is required\"),\r\n  startDate: z.string().min(1, \"Start date is required\"),\r\n  endDate: z.string().min(1, \"End date is required\"),\r\n  currentSemester: z\r\n    .number()\r\n    .min(0, \"Current semester must be at least 0\")\r\n    .max(8, \"Current semester must not exceed 8\"),\r\n  enrollmentCapacity: z\r\n    .number()\r\n    .min(1, \"Enrollment capacity must be at least 1\")\r\n    .max(500, \"Enrollment capacity must not exceed 500\"),\r\n  description: z.string().optional(),\r\n  status: z.enum([\"active\", \"completed\", \"upcoming\"], {\r\n    required_error: \"Status is required\",\r\n  }),\r\n});\r\n\r\ntype BatchFormData = z.infer<typeof batchSchema>;\r\n\r\nexport default function CreateBatchPage() {\r\n  const router = useRouter();\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n    watch,\r\n  } = useForm<BatchFormData>({\r\n    resolver: zodResolver(batchSchema),\r\n    defaultValues: {\r\n      status: \"upcoming\",\r\n      currentSemester: 0,\r\n    },\r\n  });\r\n\r\n  const createMutation = useMutation({\r\n    mutationFn: async (data: BatchFormData) => {\r\n      // Simulate API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      console.log(\"Creating batch:\", data);\r\n      return data;\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: [\"batches\"] });\r\n      router.push(\"/batches\");\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: BatchFormData) => {\r\n    createMutation.mutate(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center gap-4\">\r\n        <Link href=\"/batches\">\r\n          <Button variant=\"ghost\" size=\"sm\">\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n          </Button>\r\n        </Link>\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Add New Batch</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Create a new academic batch for enrollment\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form */}\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-8\">\r\n        {/* Basic Information */}\r\n        <div className=\"rounded-lg border p-6 space-y-4\">\r\n          <h2 className=\"text-xl font-semibold\">Basic Information</h2>\r\n          <div className=\"grid gap-4 md:grid-cols-2\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"batchYear\">\r\n                Batch Year <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Input\r\n                id=\"batchYear\"\r\n                placeholder=\"2021-2025\"\r\n                {...register(\"batchYear\")}\r\n                className={errors.batchYear ? \"border-red-500\" : \"\"}\r\n              />\r\n              {errors.batchYear && (\r\n                <p className=\"text-sm text-red-500\">\r\n                  {errors.batchYear.message}\r\n                </p>\r\n              )}\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Format: YYYY-YYYY (e.g., 2021-2025 for 4-year course)\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"batchName\">\r\n                Batch Name <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Input\r\n                id=\"batchName\"\r\n                placeholder=\"Batch 2021\"\r\n                {...register(\"batchName\")}\r\n                className={errors.batchName ? \"border-red-500\" : \"\"}\r\n              />\r\n              {errors.batchName && (\r\n                <p className=\"text-sm text-red-500\">\r\n                  {errors.batchName.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"courseId\">\r\n                Course <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Select\r\n                onValueChange={(value) => setValue(\"courseId\", value)}\r\n                defaultValue={watch(\"courseId\")}\r\n              >\r\n                <SelectTrigger className=\"bg-white text-black\">\r\n                  <SelectValue placeholder=\"Select course\" />\r\n                </SelectTrigger>\r\n                <SelectContent className=\"bg-white\">\r\n                  {mockCourses.map((course) => (\r\n                    <SelectItem key={course.id} value={course.id} className=\"text-black\">\r\n                      {course.name}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n              {errors.courseId && (\r\n                <p className=\"text-sm text-red-500\">{errors.courseId.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"status\">\r\n                Status <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Select\r\n                onValueChange={(value) => setValue(\"status\", value as \"active\" | \"completed\" | \"upcoming\")}\r\n                defaultValue={watch(\"status\")}\r\n              >\r\n                <SelectTrigger className=\"bg-white text-black\">\r\n                  <SelectValue placeholder=\"Select status\" />\r\n                </SelectTrigger>\r\n                <SelectContent className=\"bg-white\">\r\n                  <SelectItem value=\"upcoming\" className=\"text-black\">Upcoming</SelectItem>\r\n                  <SelectItem value=\"active\" className=\"text-black\">Active</SelectItem>\r\n                  <SelectItem value=\"completed\" className=\"text-black\">Completed</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n              {errors.status && (\r\n                <p className=\"text-sm text-red-500\">{errors.status.message}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Academic Details */}\r\n        <div className=\"rounded-lg border p-6 space-y-4\">\r\n          <h2 className=\"text-xl font-semibold\">Academic Details</h2>\r\n          <div className=\"grid gap-4 md:grid-cols-2\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"startDate\">\r\n                Start Date <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Input\r\n                id=\"startDate\"\r\n                type=\"date\"\r\n                {...register(\"startDate\")}\r\n                className={errors.startDate ? \"border-red-500\" : \"\"}\r\n              />\r\n              {errors.startDate && (\r\n                <p className=\"text-sm text-red-500\">{errors.startDate.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"endDate\">\r\n                End Date <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Input\r\n                id=\"endDate\"\r\n                type=\"date\"\r\n                {...register(\"endDate\")}\r\n                className={errors.endDate ? \"border-red-500\" : \"\"}\r\n              />\r\n              {errors.endDate && (\r\n                <p className=\"text-sm text-red-500\">{errors.endDate.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"currentSemester\">\r\n                Current Semester <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Input\r\n                id=\"currentSemester\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"8\"\r\n                placeholder=\"1\"\r\n                {...register(\"currentSemester\", { valueAsNumber: true })}\r\n                className={errors.currentSemester ? \"border-red-500\" : \"\"}\r\n              />\r\n              {errors.currentSemester && (\r\n                <p className=\"text-sm text-red-500\">\r\n                  {errors.currentSemester.message}\r\n                </p>\r\n              )}\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Use 0 for upcoming batches not yet started\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"enrollmentCapacity\">\r\n                Enrollment Capacity <span className=\"text-red-500\">*</span>\r\n              </Label>\r\n              <Input\r\n                id=\"enrollmentCapacity\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"500\"\r\n                placeholder=\"150\"\r\n                {...register(\"enrollmentCapacity\", { valueAsNumber: true })}\r\n                className={errors.enrollmentCapacity ? \"border-red-500\" : \"\"}\r\n              />\r\n              {errors.enrollmentCapacity && (\r\n                <p className=\"text-sm text-red-500\">\r\n                  {errors.enrollmentCapacity.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Additional Information */}\r\n        <div className=\"rounded-lg border p-6 space-y-4\">\r\n          <h2 className=\"text-xl font-semibold\">Additional Information</h2>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"description\">Description</Label>\r\n              <Textarea\r\n                id=\"description\"\r\n                placeholder=\"Brief description of the batch...\"\r\n                rows={4}\r\n                {...register(\"description\")}\r\n                className=\"bg-white text-black\"\r\n              />\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Optional notes about the batch (e.g., special programs, initiatives)\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Actions */}\r\n        <div className=\"flex justify-end gap-4\">\r\n          <Link href=\"/batches\">\r\n            <Button type=\"button\" variant=\"outline\">\r\n              Cancel\r\n            </Button>\r\n          </Link>\r\n          <Button type=\"submit\" disabled={createMutation.isPending}>\r\n            {createMutation.isPending ? \"Creating...\" : \"Create Batch\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}